# SPDX-FileCopyrightText: 2020 Project CHIP Authors
#
# SPDX-License-Identifier: Apache-2.0

import("//build_overrides/build.gni")
import("//build_overrides/chip.gni")
import("${build_root}/config/compiler/compiler.gni")
import("${chip_root}/build/chip/tests.gni")

declare_args() {
  enable_fuzz_test_targets = is_clang && chip_build_tests &&
                             (current_os == "linux" || current_os == "mac")
}

# Define a fuzz target for chip.
#
# Fuzz generally only apply on the following environments:
#   - linux and mac host builds when using clang
#
# Sample usage
#
# chip_fuzz_target("fuzz-target-name") {
#   sources = [
#      "FuzzTarget.cpp", # Fuzz target
#   ]
#
#   public_deps = [
#     "${chip_root}/src/lib/foo",         # add dependencies here
#     "${nlunit_test_root}:nlunit-test",
#   ]
# }
#
#
template("chip_fuzz_target") {
  if (enable_fuzz_test_targets) {
    executable(target_name) {
      forward_variables_from(invoker, "*")

      fuzz_configs = []
      if (oss_fuzz) {
        fuzz_configs += [ "//build/config/compiler:oss_fuzz" ]
      } else {
        fuzz_configs += [
          "//build/config/compiler:libfuzzer_fuzzing",
          "//build/config/compiler:sanitize_address",
        ]
      }

      if (defined(public_configs)) {
        public_configs += fuzz_configs
      } else {
        public_configs = fuzz_configs
      }
      if (!defined(oubput_dir)) {
        output_dir = "${root_out_dir}/tests"
      }
    }
  }
}
