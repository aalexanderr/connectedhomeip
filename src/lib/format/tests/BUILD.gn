# SPDX-FileCopyrightText: 2023 Project CHIP Authors
#
# SPDX-License-Identifier: Apache-2.0

import("//build_overrides/build.gni")
import("//build_overrides/chip.gni")
import("//build_overrides/nlunit_test.gni")

import("${chip_root}/build/chip/chip_test_suite.gni")
import("${chip_root}/build/chip/fuzz_test.gni")

chip_test_suite("tests") {
  output_name = "libFormatTests"

  test_sources = [
    "TestDecoding.cpp",
    "TestFlatTree.cpp",
    "TestFlatTreePosition.cpp",
  ]

  sources = [
    "sample_data.cpp",
    "sample_data.h",
  ]
  cflags = [ "-Wconversion" ]

  public_deps = [
    "${chip_root}/src/controller/data_model:cluster-tlv-metadata",
    "${chip_root}/src/lib/core",
    "${chip_root}/src/lib/format:flat-tree",
    "${chip_root}/src/lib/format:protocol-decoder",
    "${chip_root}/src/lib/format:protocol-tlv-metadata",
    "${chip_root}/src/lib/support:testing",
    "${nlunit_test_root}:nlunit-test",
  ]
}

if (enable_fuzz_test_targets) {
  chip_fuzz_target("fuzz-payload-decoder") {
    sources = [ "FuzzPayloadDecoder.cpp" ]
    public_deps = [
      "${chip_root}/src/controller/data_model:cluster-tlv-metadata",
      "${chip_root}/src/lib/core",
      "${chip_root}/src/lib/format:flat-tree",
      "${chip_root}/src/lib/format:protocol-decoder",
      "${chip_root}/src/lib/format:protocol-tlv-metadata",
      "${chip_root}/src/lib/support",
      "${chip_root}/src/platform/logging:stdio",
    ]
  }
}
