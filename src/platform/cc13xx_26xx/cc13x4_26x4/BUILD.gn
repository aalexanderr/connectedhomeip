# SPDX-FileCopyrightText: 2021 Project CHIP Authors
#
# SPDX-License-Identifier: Apache-2.0

import("//build_overrides/chip.gni")

import("${chip_root}/src/platform/device.gni")

assert(chip_device_platform == "cc13x4_26x4")

if (chip_enable_openthread) {
  import("//build_overrides/openthread.gni")
}

static_library("cc13x4_26x4") {
  sources = [
    "../../FreeRTOS/SystemTimeSupport.cpp",
    "../../SingletonConfigurationManager.cpp",
    "../CC13XX_26XXConfig.cpp",
    "../CC13XX_26XXConfig.h",
    "../ConfigurationManagerImpl.cpp",
    "../ConnectivityManagerImpl.cpp",
    "../DiagnosticDataProviderImpl.cpp",
    "../DiagnosticDataProviderImpl.h",
    "../KeyValueStoreManagerImpl.cpp",
    "../Logging.cpp",
    "../PlatformManagerImpl.cpp",
    "../Random.c",
    "BlePlatformConfig.h",
    "CHIPDevicePlatformConfig.h",
    "CHIPDevicePlatformEvent.h",
    "ConnectivityManagerImpl.h",
    "InetPlatformConfig.h",
    "KeyValueStoreManagerImpl.h",
    "PlatformManagerImpl.h",
    "SystemPlatformConfig.h",
  ]

  deps = []

  public_deps = [
    "${chip_root}/src/crypto",
    "${chip_root}/src/platform:platform_base",
  ]
  public_configs =
      [ "${chip_root}/src/lib/address_resolve:default_address_resolve_config" ]

  if (chip_enable_ble) {
    sources += [
      "../BLEManagerImpl.cpp",
      "BLEManagerImpl.h",
    ]
  }

  if (chip_enable_ota_requestor) {
    sources += [
      # this needs to be in the final link to place the data correctly
      # see ${chip_root}/third_party/ti_simplelink_sdk/ti_simplelink_executable.gni
      #"oad_image_header.c",
      "../OTAImageProcessorImpl.cpp",
      "../OTAImageProcessorImpl.h",
    ]
  }

  if (chip_enable_openthread) {
    # needed for MTD/FTD
    import("//build_overrides/ti_simplelink_sdk.gni")
    import("${ti_simplelink_sdk_build_root}/ti_simplelink_board.gni")
    public_deps += [
      "${chip_root}/third_party/openthread/platforms/cc13x4_26x4:libopenthread-cc13x4_cc26x4",
      "${chip_root}/third_party/ti_simplelink_sdk:mbedtls",
      "${chip_root}/third_party/ti_simplelink_sdk:ti_simplelink_sdk",
      "${chip_root}/third_party/ti_simplelink_sdk:ti_simplelink_sysconfig",
    ]

    if (chip_openthread_ftd) {
      public_deps +=
          [ "${chip_root}/third_party/openthread/repo:libopenthread-ftd" ]
    } else {
      public_deps +=
          [ "${chip_root}/third_party/openthread/repo:libopenthread-mtd" ]
    }

    sources += [
      "../../OpenThread/OpenThreadUtils.cpp",
      "../ThreadStackManagerImpl.cpp",
      "ThreadStackManagerImpl.h",
    ]

    if (chip_mdns == "platform") {
      deps += [ "${chip_root}/src/lib/dnssd:platform_header" ]
      sources += [
        "../../OpenThread/DnssdImpl.cpp",
        "../../OpenThread/OpenThreadDnssdImpl.cpp",
        "../../OpenThread/OpenThreadDnssdImpl.h",
      ]
    }
  }
}
