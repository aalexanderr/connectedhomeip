# SPDX-FileCopyrightText: 2022 Project CHIP Authors
#
# SPDX-License-Identifier: Apache-2.0

import("//build_overrides/chip.gni")

import("${chip_root}/build/chip/buildconfig_header.gni")
import("${chip_root}/src/platform/device.gni")

assert(chip_device_platform == "openiotsdk")

declare_args() {
  # Default value of software version
  chip_openiotsdk_software_version = "0"

  # Default value of software version in string
  chip_openiotsdk_software_version_string = "0.0.0"
}

buildconfig_header("openiotsdk_buildconfig") {
  header = "OpenIoTSDKConfig.h"
  header_dir = "ois"

  _chip_openiotsdk_persisted_storage_key_type = "uint64_t"

  defines = [
    "CHIP_CONFIG_PERSISTED_STORAGE_KEY_TYPE=${_chip_openiotsdk_persisted_storage_key_type}",
    "CHIP_DEVICE_CONFIG_DEVICE_SOFTWARE_VERSION_STRING=\"${chip_openiotsdk_software_version_string}\"",
    "CHIP_DEVICE_CONFIG_DEVICE_SOFTWARE_VERSION=${chip_openiotsdk_software_version}",
  ]
}

static_library("openiotsdk") {
  sources = [
    "../SingletonConfigurationManager.cpp",
    "BlePlatformConfig.h",
    "CHIPDevicePlatformConfig.h",
    "CHIPDevicePlatformEvent.h",
    "CHIPPlatformConfig.h",
    "ConfigurationManagerImpl.cpp",
    "ConfigurationManagerImpl.h",
    "ConnectivityManagerImpl.cpp",
    "ConnectivityManagerImpl.h",
    "DiagnosticDataProviderImpl.cpp",
    "DiagnosticDataProviderImpl.h",
    "InetPlatformConfig.h",
    "KVPsaPsStore.cpp",
    "KVPsaPsStore.h",
    "KeyValueStoreManagerImpl.cpp",
    "KeyValueStoreManagerImpl.h",
    "Logging.cpp",
    "Logging.h",
    "NetworkCommissioningDriver.h",
    "NetworkCommissioningEthernetDriver.cpp",
    "OpenIoTSDKArchUtils.c",
    "OpenIoTSDKArchUtils.h",
    "OpenIoTSDKPort.h",
    "PlatformManagerImpl.cpp",
    "PlatformManagerImpl.h",
    "SystemPlatformConfig.h",
    "SystemTimeSupport.cpp",
  ]

  public_deps = [
    ":openiotsdk_buildconfig",
    "${chip_root}/src/platform:platform_base",
  ]

  if (chip_enable_ota_requestor) {
    sources += [
      "OTAImageProcessorImpl.cpp",
      "OTAImageProcessorImpl.h",
    ]
  }

  cflags = [ "-Wconversion" ]
}
