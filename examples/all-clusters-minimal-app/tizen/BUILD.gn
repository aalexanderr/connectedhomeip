# SPDX-FileCopyrightText: 2020 Project CHIP Authors
#
# SPDX-License-Identifier: Apache-2.0

import("//build_overrides/chip.gni")
import("//build_overrides/tizen.gni")

import("${chip_root}/build/chip/tools.gni")
import("${chip_root}/src/app/common_flags.gni")

import("${tizen_sdk_build_root}/tizen_sdk.gni")
assert(chip_build_tools)

source_set("chip-all-clusters-common") {
  sources = [
    "${chip_root}/examples/all-clusters-app/all-clusters-common/src/binding-handler.cpp",
    "${chip_root}/examples/all-clusters-app/all-clusters-common/src/bridged-actions-stub.cpp",
    "${chip_root}/examples/all-clusters-app/all-clusters-common/src/smco-stub.cpp",
    "${chip_root}/examples/all-clusters-app/all-clusters-common/src/static-supported-modes-manager.cpp",
  ]

  deps = [
    "${chip_root}/examples/all-clusters-minimal-app/all-clusters-common",
    "${chip_root}/examples/platform/tizen:app-main",
    "${chip_root}/src/lib/shell:shell_core",
  ]

  include_dirs =
      [ "${chip_root}/examples/all-clusters-app/all-clusters-common/include" ]
}

executable("chip-all-clusters-minimal-app") {
  sources = [
    "include/CHIPProjectAppConfig.h",
    "src/main.cpp",
  ]

  deps = [
    ":chip-all-clusters-common",
    "${chip_root}/examples/all-clusters-minimal-app/all-clusters-common",
    "${chip_root}/examples/platform/tizen:app-main",
    "${chip_root}/src/lib",
  ]

  include_dirs = [
    "${chip_root}/examples/all-clusters-app/all-clusters-common/include",
    "include",
  ]

  output_dir = root_out_dir
}

tizen_sdk_package("chip-all-clusters-minimal-app:tpk") {
  deps = [
    ":chip-all-clusters-minimal-app",
    "${chip_root}/examples/platform/tizen:author-certificate-CHIP",
  ]
  manifest = "tizen-manifest.xml"
  sign_security_profile = "CHIP"
}

group("tizen") {
  deps = [ ":chip-all-clusters-minimal-app" ]
}

group("tizen:tpk") {
  deps = [ ":chip-all-clusters-minimal-app:tpk" ]
}

group("default") {
  deps = [ ":tizen" ]
}
