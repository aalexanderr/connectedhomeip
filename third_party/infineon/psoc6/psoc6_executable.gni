# SPDX-FileCopyrightText: 2021 Project CHIP Authors
#
# SPDX-License-Identifier: Apache-2.0

import("//build_overrides/build.gni")
import("//build_overrides/chip.gni")
import("${build_root}/toolchain/flashable_executable.gni")

import("psoc6_board.gni")

template("psoc6_executable") {
  output_base_name = get_path_info(invoker.output_name, "name")

  objcopy_image_name = output_base_name + ".hex"
  objcopy_image_format = "ihex"
  objcopy = "arm-none-eabi-objcopy"

  #Copy flashing dependencies to the output directory so that the output
  #is collectively self-contained; this allows flashing to work reliably
  #even if the build and flashing steps take place on different machines
  #or in different containers.

  flashing_runtime_target = target_name + ".flashing_runtime"
  flashing_script_inputs = [
    "${chip_root}/scripts/flashing/firmware_utils.py",
    "${chip_root}/scripts/flashing/psoc6_firmware_utils.py",
  ]

  copy(flashing_runtime_target) {
    sources = flashing_script_inputs
    outputs = [ "${root_out_dir}/{{source_file_part}}" ]
  }

  flashing_script_generator =
      "${chip_root}/scripts/flashing/gen_flashing_script.py"
  flashing_script_name = output_base_name + ".flash.py"
  flashing_options = [
    "psoc6",
    "--device",
    "${psoc6_board}",
  ]

  flashable_executable(target_name) {
    forward_variables_from(invoker, "*")
    data_deps = [ ":${flashing_runtime_target}" ]
  }
}
